(declare-datatypes (a)
  ((list (nil) (cons (head a) (tail (list a))))))

(define-fun-rec
  (par (a b)
    (map2
       ((f (=> a b)) (xs (list a))) (list b)
       (match xs
         (case nil (as nil (list b)))
         (case (cons y ys) (cons (@ f y) (map2 f ys)))))))

(assert-not
  (forall ((f (=> Int Bool)) (g (=> Int Int)) (xs (list Int)))
    (= (map2 (lambda ((x Int)) (@ f (@ g x))) xs)
      (map2 f (map2 g xs)))))

(check-sat)

